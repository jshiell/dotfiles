#!/bin/bash

# Initial machine setup; untested in whole as yet

readonly COMPUTER_NAME="${1:-}"
if [[ "$COMPUTER_NAME" == '--help' ]]; then
	echo "Usage: $0 [computer-name]"
	exit 1
fi

BREW_APPS="bat diff-so-fancy fd httpie iftop mtr noti prettyping python rbenv rbenv-bundler rbenv-bundler-ruby-version ruby-build the_silver_searcher tldr tmux vim"
CASK_APPS="0xed 1password alfred battle-net calibre docker doxie dropbox firefox google-chrome grandperspective intellij-idea iterm2 java8 java10 kaleidoscope karabiner-elements little-snitch moneydance moom omnigraffle scroll-reverser slack spotify steam visual-studio-code"
POST_CASK_INSTALLERS="'/opt/homebrew-cask/Caskroom/battle-net/latest/Battle.net-Setup-enUS.app'"


## Machine name ############################################################

if [[ -n "$COMPUTER_NAME" ]]; then
    sudo scutil --set ComputerName "$COMPUTER_NAME"
    sudo scutil --set HostName "$COMPUTER_NAME"
    sudo scutil --set LocalHostName "$COMPUTER_NAME"
    sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "$COMPUTER_NAME"
fi

## Dot files ###############################################################

git clone https://github.com/zsh-users/antigen.git ~/.antigen
git clone git@github.com:jshiell/dotfiles.git ~/dotfile

~/dotfiles/link

## Brew & apps #############################################################

ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

brew install git 
brew update

brew update
brew tap caskroom/versions
brew tap AdoptOpenJDK/openjdk

for APP in ${BREW_APPS}; do
    brew install "$APP"
done

for APP in ${CASK_APPS}; do
    brew cask install --appdir=/Applications --prefpanedir=/Library/PreferencePanes "$APP"
done
for INSTALLER in ${POST_CASK_INSTALLERS}; do
    open $INSTALLER
done 

brew cleanup


## Git

git config --global user.name 'Jamie Shiell'
git config --global user.email 'jamie@infernus.org'
git config --global user.signingkey '1C25BF0EE37BF38E'

git config --global pull.rebase true
git config --global commit.gpgsign true

git config --global core.pager "diff-so-fancy | less --tabs=4 -RFX"
git config --global color.diff-highlight.oldNormal    "red bold"
git config --global color.diff-highlight.oldHighlight "red bold 52"
git config --global color.diff-highlight.newNormal    "green bold"
git config --global color.diff-highlight.newHighlight "green bold 22"
git config --global color.diff.meta       "yellow"
git config --global color.diff.frag       "magenta bold"
git config --global color.diff.commit     "yellow bold"
git config --global color.diff.old        "red bold"
git config --global color.diff.new        "green bold"
git config --global color.diff.whitespace "red reverse"


## Extra toys

sudo pip install powerline-status glances

git clone https://github.com/powerline/fonts $TMPDIR/fonts
pushd $TMPDIR/fonts >/dev/null
./install.sh
popd >/dev/null


## General settings ########################################################

# Turn on firewall; disallow signed software from making external requests without confirmation; activate stealth mode
sudo defaults write /Library/Preferences/com.apple.alf globalstate -int 1
sudo defaults write /Library/Preferences/com.apple.alf allowsignedenabled -bool false
sudo defaults write /Library/Preferences/com.apple.alf stealthenabled -bool true

# Set standby delay to 30m
sudo pmset -a standbydelay 7200

# Disable boot SFX
sudo nvram SystemAudioVolume=" "

# Default save panel is expanded
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Default to saving to disk
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Save screenshots as PNGs
defaults write com.apple.screencapture type -string "png"

# Enable HiDPI modes
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

# Check for updates daily
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

# Ask for password 10s after screensaver starts
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 10

# Show extended host info on login (click the time)
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

# Full keyboard access
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

# Search current directory by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Don't create bloody .DS_Store files on network drives
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

# Default to column views in Finder
defaults write com.apple.finder FXPreferredViewStyle -string "clmv"

# Allow AirDrop over ethernet
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

# Die Dashboard, die
defaults write com.apple.dashboard mcx-disabled -bool true
defaults write com.apple.dock dashboard-in-overlay -bool true

# Autohide the Dock
defaults write com.apple.dock autohide-delay -float 0
defaults write com.apple.dock autohide -bool true

# We're not in Kansas
defaults write NSGlobalDomain AppleLanguages -array "en-GB" "en"
defaults write NSGlobalDomain AppleLocale -string "en_GB"
defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
defaults write NSGlobalDomain AppleMetricUnits -bool true

# Set the timezone; see `sudo systemsetup -listtimezones` for other values
sudo systemsetup -settimezone "Europe/London" > /dev/null

# Clean up launch services duplicates (Open With...)
/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user

# Don't open 'safe' files after downloading
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

# Turn on developer menu/inspector
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

# Hide Time Machine icon
for domain in ~/Library/Preferences/ByHost/com.apple.systemuiserver.*; do
    defaults write "${domain}" dontAutoLoad -array \
        "/System/Library/CoreServices/Menu Extras/TimeMachine.menu"
done

# Disable local TM snapshots
sudo tmutil disablelocal

# Don't ask to backup new volumes
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

## SSDs ####################################################################

# Disable the sudden motion sensor
sudo pmset -a sms 0 

# Disable hibernation
sudo pmset -a hibernatemode 0

# Remove the sleep image and create a read-only file in its place
sudo rm /private/var/vm/sleepimage
sudo touch /private/var/vm/sleepimage
sudo chflags uchg /private/var/vm/sleepimage

# Disabled Gamed
sudo defaults write /System/Library/LaunchAgents/com.apple.gamed disabled -bool true
launchctl unload -w /System/Library/LaunchAgents/com.apple.gamed.plist

